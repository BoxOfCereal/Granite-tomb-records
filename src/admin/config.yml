# Use DecapBridge auth (required)
backend:
  name: git-gateway
  repo: BoxOfCereal/Granite-tomb-records
  branch: main
  identity_url: https://auth.decapbridge.com/sites/7deae718-ed08-41ba-89c4-9ae82175b993
  gateway_url: https://gateway.decapbridge.com

  # Quickly see who did what (optional)
  commit_messages:
    create: Create {{collection}} “{{slug}}” - {{author-name}} <{{author-login}}> via DecapBridge
    update: Update {{collection}} “{{slug}}” - {{author-name}} <{{author-login}}> via DecapBridge
    delete: Delete {{collection}} “{{slug}}” - {{author-name}} <{{author-login}}> via DecapBridge
    uploadMedia: Upload “{{path}}” - {{author-name}} <{{author-login}}> via DecapBridge
    deleteMedia: Delete “{{path}}” - {{author-name}} <{{author-login}}> via DecapBridge
    openAuthoring: Message {{message}} - {{author-name}} <{{author-login}}> via DecapBridge

# Better Decap + Bridge logo (optional)
logo_url: https://decapbridge.com/decapcms-with-bridge.svg

# Add site links in DecapCMS (optional)
site_url: https://6803a316d0758b0008e05c43--papaya-choux-523d7b.netlify.app

media_folder: imgs
public_folder: imgs
collections:
  - name: "posters"
    label: "Poster Images"
    folder: "imgs/posters"
    create: true
    slug: "{{slug}}"
    sortable_fields: ['order', 'title', 'date'] # Users can sort by these fields
    fields:
      - { label: "Title", name: "title", widget: "string", required: false }
      - { label: "Order", name: "order", widget: "number", required: false }
      - { label: "Poster Image", name: "image", widget: "image" }
      - { label: "Description", name: "description", widget: "text", required: false }
  - name: "live_photos"
    label: "Live Photos"
    folder: "imgs/live"
    create: true
    slug: "{{slug}}"
    fields:
      - { label: "Title", name: "title", widget: "string", required: false }
      - { label: "Order", name: "order", widget: "number", required: false }
      - { label: "Photo", name: "image", widget: "image" }
      - { label: "Description", name: "description", widget: "text", required: false }