<section id="contact" class="py-20 bg-dark">
    <div class="container mx-auto px-4">
        <h2 class="text-3xl uppercase mb-12 text-center">Contact</h2>
        <div class="max-w-2xl mx-auto">
            <form class="space-y-6" method="POST" action="{{ easyForm.url }}">
                <div class="grid md:grid-cols-2 gap-6">
                    <div>
                        <label for="name" class="block uppercase text-sm mb-2">Name</label>
                        <input type="text" id="name" class="w-full bg-black border border-light p-3 focus:outline-none focus:border-white">
                    </div>
                    <div>
                        <label for="email" class="block uppercase text-sm mb-2">Email</label>
                        <input type="email" id="email" class="w-full bg-black border border-light p-3 focus:outline-none focus:border-white">
                    </div>
                </div>
                {# <div>
                    <label for="subject" class="block uppercase text-sm mb-2">Subject</label>
                    <input type="text" id="subject" class="w-full bg-black border border-light p-3 focus:outline-none focus:border-white">
                </div> #}
                <div>
                    <label for="message" class="block uppercase text-sm mb-2">Message</label>
                    <textarea id="message" rows="5" class="w-full bg-black border border-light p-3 focus:outline-none focus:border-white"></textarea>
                </div>
                <button id="submit-btn" type="submit" class="bg-white text-black uppercase px-8 py-3 hover:bg-muted transition">Send Message</button>
                <div id="form-status" class="mt-4 text-center text-sm min-h-[1.5em] transition-colors duration-200"></div>
                <style>
                  /* Hide the default floating reCAPTCHA badge */
                  .grecaptcha-badge { display: none !important; }
                </style>
                <div class="text-xs text-muted mt-2 text-center">
                  This site is protected by reCAPTCHA and the
                  <a href="https://policies.google.com/privacy" target="_blank" rel="noopener">Google Privacy Policy</a> and
                  <a href="https://policies.google.com/terms" target="_blank" rel="noopener">Terms of Service</a> apply.
                </div>
            </form>
            <div class="mt-12 pt-8 border-t border-light">
                <h3 class="text-xl uppercase mb-6">Direct Contact</h3>
                <div class="space-y-2">
                    <p class="flex items-center">
                        <i class="fas fa-envelope mr-4 text-muted"></i>
                        <span>Granitetombrecords@gmail.com</span>
                    </p>
                    <p class="flex items-center">
                        <i class="fas fa-phone mr-4 text-muted"></i>
                        <span>+1 666-666-6666</span>
                    </p>
                    <p class="flex items-center">
                        <i class="fas fa-map-marker-alt mr-4 text-muted"></i>
                        <span>666 Hellraiser Ave, Metalville, USA</span>
                    </p>
                </div>
            </div>
        </div>
    </div>
<script src="https://www.google.com/recaptcha/api.js?render={{ easyForm.siteKey }}" async defer></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.querySelector('#contact form');
  const statusMsg = document.getElementById('form-status');
  const submitBtn = document.getElementById('submit-btn');
  const inputs = form.querySelectorAll('input, textarea');

  if (!form) return;

  // Possible states: 'loading', 'ready', 'submitting', 'waiting', 'success', 'error'
  let state = 'loading';
  let scriptLoaded = false;
  let grecaptchaReady = false;
  let grecaptchaQueue = [];

  function setState(newState, errorMsg) {
    state = newState;
    switch (state) {
      case 'loading':
        statusMsg.textContent = 'Loading security...';
        submitBtn.disabled = true;
        submitBtn.textContent = 'Loading...';
        inputs.forEach(i => i.disabled = true);
        break;
      case 'ready':
        statusMsg.textContent = '';
        submitBtn.disabled = false;
        submitBtn.textContent = 'Send Message';
        inputs.forEach(i => i.disabled = false);
        break;
      case 'submitting':
        statusMsg.textContent = 'Submitting your message...';
        submitBtn.disabled = true;
        submitBtn.textContent = 'Submitting...';
        inputs.forEach(i => i.disabled = true);
        break;
      case 'waiting':
        statusMsg.textContent = 'Waiting for response...';
        submitBtn.disabled = true;
        submitBtn.textContent = 'Waiting...';
        break;
      case 'success':
        statusMsg.textContent = 'Message sent! Thank you.';
        submitBtn.disabled = false;
        submitBtn.textContent = 'Send Message';
        inputs.forEach(i => i.disabled = false);
        break;
      case 'error':
        statusMsg.textContent = errorMsg || 'There was an error sending your message.';
        submitBtn.disabled = false;
        submitBtn.textContent = 'Send Message';
        inputs.forEach(i => i.disabled = false);
        break;
    }
  }

  setState('loading');

  // Intersection Observer to load reCAPTCHA script when form is in view
  const observer = new IntersectionObserver(function(entries) {
    if (entries[0].isIntersecting && !scriptLoaded) {
      scriptLoaded = true;
      const script = document.createElement('script');
      script.src = 'https://www.google.com/recaptcha/api.js?render={{ easyForm.siteKey }}';
      script.async = true;
      script.defer = true;
      script.onload = function() {
        grecaptchaReady = true;
        setState('ready');
        grecaptchaQueue.forEach(fn => fn());
        grecaptchaQueue = [];
      };
      document.body.appendChild(script);
      observer.disconnect();
    }
  }, { threshold: 0.1 });
  observer.observe(form);

  form.addEventListener('submit', function(event) {
    event.preventDefault();
    if (state === 'submitting' || state === 'waiting') return;

    // Validation
    const name = document.getElementById('name');
    const message = document.getElementById('message');
    let valid = true;
    let validationMsg = '';
    if (!name.value.trim()) {
      valid = false;
      validationMsg = 'Please enter your name.';
      name.focus();
    } else if (!message.value.trim() || message.value.trim().length < 3) {
      valid = false;
      validationMsg = 'Message must be at least 3 characters.';
      message.focus();
    }
    if (!valid) {
      setState('error', validationMsg);
      statusMsg.style.color = '#dc2626'; // Tailwind red-600
      return;
    } else {
      statusMsg.style.color = '';
    }

    setState('submitting');
    function handleSubmit() {
      grecaptcha.ready(function () {
        grecaptcha.execute('{{ easyForm.siteKey }}', { action: 'submit' }).then(function (token) {
          setState('waiting');
          const data = {
            name: name.value,
            email: document.getElementById('email').value,
            message: message.value,
            gCaptchaResponse: token
          };
          fetch('{{ easyForm.url }}', {
            method: 'POST',
            headers: {
              'Content-Type': 'text/plain;charset=utf-8',
            },
            body: JSON.stringify(data),
          })
          .then(res => res.json())
          .then(response => {
            setState('success');
            form.reset();
          })
          .catch(err => {
            setState('error', 'There was an error sending your message.');
            statusMsg.style.color = '#dc2626';
            console.error('Submission error:', err);
          });
        });
      });
    }
    if (window.grecaptcha && grecaptchaReady) {
      handleSubmit();
    } else {
      grecaptchaQueue.push(handleSubmit);
    }
  });
});
</script>
</section>